{
  "{\"assumptions\":{},\"sourceRoot\":\"/media/igor/cc50464b-7dd7-4441-b971-583f5f5884c6/igor 2/Ecrescer/JavaScript/calculadora-js/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/media/igor/cc50464b-7dd7-4441-b971-583f5f5884c6/igor 2/Ecrescer/JavaScript/calculadora-js\",\"filename\":\"/media/igor/cc50464b-7dd7-4441-b971-583f5f5884c6/igor 2/Ecrescer/JavaScript/calculadora-js/src/calculadora.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/igor/cc50464b-7dd7-4441-b971-583f5f5884c6/igor 2/Ecrescer/JavaScript/calculadora-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-duplicate-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"_exploded\":true,\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/media/igor/cc50464b-7dd7-4441-b971-583f5f5884c6/igor 2/Ecrescer/JavaScript/calculadora-js/node_modules/@babel/preset-env/lib/index.js$46\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/media/igor/cc50464b-7dd7-4441-b971-583f5f5884c6/igor 2/Ecrescer/JavaScript/calculadora-js/node_modules/@babel/preset-env/lib/index.js$47\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.25.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/media/igor/cc50464b-7dd7-4441-b971-583f5f5884c6/igor 2/Ecrescer/JavaScript/calculadora-js/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/media/igor/cc50464b-7dd7-4441-b971-583f5f5884c6/igor 2/Ecrescer/JavaScript/calculadora-js",
      "filename": "/media/igor/cc50464b-7dd7-4441-b971-583f5f5884c6/igor 2/Ecrescer/JavaScript/calculadora-js/src/calculadora.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/media/igor/cc50464b-7dd7-4441-b971-583f5f5884c6/igor 2/Ecrescer/JavaScript/calculadora-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-duplicate-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-sets-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-class-static-block",
          "visitor": {
            "ClassBody": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          },
          "externalDependencies": []
        },
        {
          "key": "transform-class-properties",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          },
          "externalDependencies": []
        },
        {
          "key": "transform-private-methods",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          },
          "externalDependencies": []
        },
        {
          "key": "transform-numeric-separator",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-logical-assignment-operators",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-nullish-coalescing-operator",
          "visitor": {
            "LogicalExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-json-strings",
          "visitor": {
            "_exploded": true,
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-optional-catch-binding",
          "visitor": {
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-generator-functions",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "DoWhileStatement": {
              "exit": [
                null
              ]
            },
            "ForInStatement": {
              "exit": [
                null
              ]
            },
            "ForStatement": {
              "exit": [
                null
              ]
            },
            "WhileStatement": {
              "exit": [
                null
              ]
            },
            "ForOfStatement": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-regenerator",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-export-namespace-from",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "ImportExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dynamic-import",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "/media/igor/cc50464b-7dd7-4441-b971-583f5f5884c6/igor 2/Ecrescer/JavaScript/calculadora-js/node_modules/@babel/preset-env/lib/index.js$46",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "/media/igor/cc50464b-7dd7-4441-b971-583f5f5884c6/igor 2/Ecrescer/JavaScript/calculadora-js/node_modules/@babel/preset-env/lib/index.js$47",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/igor/cc50464b-7dd7-4441-b971-583f5f5884c6/igor 2/Ecrescer/JavaScript/calculadora-js/src/calculadora.js",
        "plugins": [
          "regexpUnicodeSets",
          "classStaticBlock",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "topLevelAwait",
          "importMeta"
        ]
      },
      "generatorOpts": {
        "filename": "/media/igor/cc50464b-7dd7-4441-b971-583f5f5884c6/igor 2/Ecrescer/JavaScript/calculadora-js/src/calculadora.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/igor/cc50464b-7dd7-4441-b971-583f5f5884c6/igor 2/Ecrescer/JavaScript/calculadora-js/src/",
        "sourceFileName": "calculadora.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculadora = exports.OPERACAO_INVALIDA = void 0;\nvar _readline = _interopRequireDefault(require(\"readline\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { \"default\": e }; }\n// export const OPERACAO_INVALIDA = 'OPERACAO_INVALIDA'\n\n// export const calculadora = (operacao, valores) => {\n//   // código mais simples com a função reduce mas que ainda não foi visto em aula\n//   if (!Array.isArray(valores) || valores.length === 0) {\n//     return OPERACAO_INVALIDA;\n//   }\n\n//   switch (operacao) {\n//     case 'soma':\n//       return valores.reduce((a, b) => a + b, 0);\n//     case 'subtracao':\n//       return valores.reduce((a, b) => a - b);\n//     case 'multiplicacao':\n//       return valores.reduce((a, b) => a * b, 1);\n//     case 'divisao':\n//       return valores.reduce((a, b) => a / b);\n//     default:\n//       return OPERACAO_INVALIDA;\n//   }\n\n//   // codigo com oque foi visto em aula\n//   // if (!Array.isArray(valores) || valores.length === 0) {\n//   //   return OPERACAO_INVALIDA;\n//   // }\n\n//   // let resultado = valores[0];\n\n//   // switch (operacao) {\n//   //   case 'soma':\n//   //     for (let i = 1; i < valores.length; i++) {\n//   //       resultado += valores[i];\n//   //     }\n//   //     return resultado;\n//   //   case 'subtracao':\n//   //     for (let i = 1; i < valores.length; i++) {\n//   //       resultado -= valores[i];\n//   //     }\n//   //     return resultado;\n//   //   case 'multiplicacao':\n//   //     for (let i = 1; i < valores.length; i++) {\n//   //       resultado *= valores[i];\n//   //     }\n//   //     return resultado;\n//   //   case 'divisao':\n//   //     for (let i = 1; i < valores.length; i++) {\n//   //       resultado /= valores[i];\n//   //     }\n//   //     return resultado;\n//   //   default:\n//   //     return OPERACAO_INVALIDA;\n//   // }\n// }\n\n// console.log(calculadora('multiplicacao', [100, 10]))\n\nvar OPERACAO_INVALIDA = exports.OPERACAO_INVALIDA = 'OPERACAO_INVALIDA';\nvar calculadora = exports.calculadora = function calculadora(operacao, valores) {\n  if (!Array.isArray(valores) || valores.length === 0) {\n    return OPERACAO_INVALIDA;\n  }\n  switch (operacao) {\n    case 'soma':\n      return valores.reduce(function (a, b) {\n        return a + b;\n      }, 0);\n    case 'subtracao':\n      return valores.reduce(function (a, b) {\n        return a - b;\n      });\n    case 'multiplicacao':\n      return valores.reduce(function (a, b) {\n        return a * b;\n      }, 1);\n    case 'divisao':\n      return valores.reduce(function (a, b) {\n        return a / b;\n      });\n    default:\n      return OPERACAO_INVALIDA;\n  }\n};\nvar rl = _readline[\"default\"].createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\nvar exibirMenu = function exibirMenu() {\n  console.log(\"\\x1B[34m\\x1B[1m\\nEscolha uma opera\\xE7\\xE3o:\\x1B[0m\");\n  console.log(\"\\x1B[32m1 - Soma\\x1B[0m\");\n  console.log(\"\\x1B[32m2 - Subtra\\xE7\\xE3o\\x1B[0m\");\n  console.log(\"\\x1B[32m3 - Multiplica\\xE7\\xE3o\\x1B[0m\");\n  console.log(\"\\x1B[32m4 - Divis\\xE3o\\x1B[0m\");\n  console.log(\"\\x1B[31mX - Sair\\x1B[0m\");\n};\nvar _processarOperacao = function processarOperacao() {\n  exibirMenu();\n  rl.question('Digite o número correspondente à operação desejada ou \"x\" para sair: ', function (opcao) {\n    if (opcao.toLowerCase() === 'x') {\n      console.log('Encerrando a calculadora. Até a próxima!');\n      rl.close();\n      return;\n    }\n    var operacoes = {\n      1: 'soma',\n      2: 'subtracao',\n      3: 'multiplicacao',\n      4: 'divisao'\n    };\n    var operacao = operacoes[opcao];\n    if (!operacao) {\n      console.log('Opção inválida. Tente novamente.');\n      _processarOperacao();\n      return;\n    }\n    rl.question('Digite os números separados por espaço: ', function (entradaNumeros) {\n      var numeros = entradaNumeros.split(' ').map(Number);\n      var resultado = calculadora(operacao, numeros);\n      if (resultado === OPERACAO_INVALIDA) {\n        console.log('Valores fornecidos não são válidos.');\n      } else {\n        console.log(\"\\n\\x1B[41m\\x1B[1m O resultado da \".concat(operacao, \" \\xE9: \").concat(resultado, \" \\x1B[0m\"));\n      }\n      _processarOperacao();\n    });\n  });\n};\n_processarOperacao();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhZGxpbmUiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsImUiLCJfX2VzTW9kdWxlIiwiT1BFUkFDQU9fSU5WQUxJREEiLCJleHBvcnRzIiwiY2FsY3VsYWRvcmEiLCJvcGVyYWNhbyIsInZhbG9yZXMiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJyZWR1Y2UiLCJhIiwiYiIsInJsIiwicmVhZGxpbmUiLCJjcmVhdGVJbnRlcmZhY2UiLCJpbnB1dCIsInByb2Nlc3MiLCJzdGRpbiIsIm91dHB1dCIsInN0ZG91dCIsImV4aWJpck1lbnUiLCJjb25zb2xlIiwibG9nIiwicHJvY2Vzc2FyT3BlcmFjYW8iLCJxdWVzdGlvbiIsIm9wY2FvIiwidG9Mb3dlckNhc2UiLCJjbG9zZSIsIm9wZXJhY29lcyIsImVudHJhZGFOdW1lcm9zIiwibnVtZXJvcyIsInNwbGl0IiwibWFwIiwiTnVtYmVyIiwicmVzdWx0YWRvIiwiY29uY2F0Il0sInNvdXJjZVJvb3QiOiIvbWVkaWEvaWdvci9jYzUwNDY0Yi03ZGQ3LTQ0NDEtYjk3MS01ODNmNWY1ODg0YzYvaWdvciAyL0VjcmVzY2VyL0phdmFTY3JpcHQvY2FsY3VsYWRvcmEtanMvc3JjLyIsInNvdXJjZXMiOlsiY2FsY3VsYWRvcmEuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXhwb3J0IGNvbnN0IE9QRVJBQ0FPX0lOVkFMSURBID0gJ09QRVJBQ0FPX0lOVkFMSURBJ1xuXG4vLyBleHBvcnQgY29uc3QgY2FsY3VsYWRvcmEgPSAob3BlcmFjYW8sIHZhbG9yZXMpID0+IHtcbi8vICAgLy8gY8OzZGlnbyBtYWlzIHNpbXBsZXMgY29tIGEgZnVuw6fDo28gcmVkdWNlIG1hcyBxdWUgYWluZGEgbsOjbyBmb2kgdmlzdG8gZW0gYXVsYVxuLy8gICBpZiAoIUFycmF5LmlzQXJyYXkodmFsb3JlcykgfHwgdmFsb3Jlcy5sZW5ndGggPT09IDApIHtcbi8vICAgICByZXR1cm4gT1BFUkFDQU9fSU5WQUxJREE7XG4vLyAgIH1cblxuLy8gICBzd2l0Y2ggKG9wZXJhY2FvKSB7XG4vLyAgICAgY2FzZSAnc29tYSc6XG4vLyAgICAgICByZXR1cm4gdmFsb3Jlcy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiLCAwKTtcbi8vICAgICBjYXNlICdzdWJ0cmFjYW8nOlxuLy8gICAgICAgcmV0dXJuIHZhbG9yZXMucmVkdWNlKChhLCBiKSA9PiBhIC0gYik7XG4vLyAgICAgY2FzZSAnbXVsdGlwbGljYWNhbyc6XG4vLyAgICAgICByZXR1cm4gdmFsb3Jlcy5yZWR1Y2UoKGEsIGIpID0+IGEgKiBiLCAxKTtcbi8vICAgICBjYXNlICdkaXZpc2FvJzpcbi8vICAgICAgIHJldHVybiB2YWxvcmVzLnJlZHVjZSgoYSwgYikgPT4gYSAvIGIpO1xuLy8gICAgIGRlZmF1bHQ6XG4vLyAgICAgICByZXR1cm4gT1BFUkFDQU9fSU5WQUxJREE7XG4vLyAgIH1cblxuICBcblxuXG4vLyAgIC8vIGNvZGlnbyBjb20gb3F1ZSBmb2kgdmlzdG8gZW0gYXVsYVxuLy8gICAvLyBpZiAoIUFycmF5LmlzQXJyYXkodmFsb3JlcykgfHwgdmFsb3Jlcy5sZW5ndGggPT09IDApIHtcbi8vICAgLy8gICByZXR1cm4gT1BFUkFDQU9fSU5WQUxJREE7XG4vLyAgIC8vIH1cblxuLy8gICAvLyBsZXQgcmVzdWx0YWRvID0gdmFsb3Jlc1swXTtcblxuLy8gICAvLyBzd2l0Y2ggKG9wZXJhY2FvKSB7XG4vLyAgIC8vICAgY2FzZSAnc29tYSc6XG4vLyAgIC8vICAgICBmb3IgKGxldCBpID0gMTsgaSA8IHZhbG9yZXMubGVuZ3RoOyBpKyspIHtcbi8vICAgLy8gICAgICAgcmVzdWx0YWRvICs9IHZhbG9yZXNbaV07XG4vLyAgIC8vICAgICB9XG4vLyAgIC8vICAgICByZXR1cm4gcmVzdWx0YWRvO1xuLy8gICAvLyAgIGNhc2UgJ3N1YnRyYWNhbyc6XG4vLyAgIC8vICAgICBmb3IgKGxldCBpID0gMTsgaSA8IHZhbG9yZXMubGVuZ3RoOyBpKyspIHtcbi8vICAgLy8gICAgICAgcmVzdWx0YWRvIC09IHZhbG9yZXNbaV07XG4vLyAgIC8vICAgICB9XG4vLyAgIC8vICAgICByZXR1cm4gcmVzdWx0YWRvO1xuLy8gICAvLyAgIGNhc2UgJ211bHRpcGxpY2FjYW8nOlxuLy8gICAvLyAgICAgZm9yIChsZXQgaSA9IDE7IGkgPCB2YWxvcmVzLmxlbmd0aDsgaSsrKSB7XG4vLyAgIC8vICAgICAgIHJlc3VsdGFkbyAqPSB2YWxvcmVzW2ldO1xuLy8gICAvLyAgICAgfVxuLy8gICAvLyAgICAgcmV0dXJuIHJlc3VsdGFkbztcbi8vICAgLy8gICBjYXNlICdkaXZpc2FvJzpcbi8vICAgLy8gICAgIGZvciAobGV0IGkgPSAxOyBpIDwgdmFsb3Jlcy5sZW5ndGg7IGkrKykge1xuLy8gICAvLyAgICAgICByZXN1bHRhZG8gLz0gdmFsb3Jlc1tpXTtcbi8vICAgLy8gICAgIH1cbi8vICAgLy8gICAgIHJldHVybiByZXN1bHRhZG87XG4vLyAgIC8vICAgZGVmYXVsdDpcbi8vICAgLy8gICAgIHJldHVybiBPUEVSQUNBT19JTlZBTElEQTtcbi8vICAgLy8gfVxuLy8gfVxuXG4vLyBjb25zb2xlLmxvZyhjYWxjdWxhZG9yYSgnbXVsdGlwbGljYWNhbycsIFsxMDAsIDEwXSkpXG5cbmltcG9ydCByZWFkbGluZSBmcm9tICdyZWFkbGluZSc7XG5cbmV4cG9ydCBjb25zdCBPUEVSQUNBT19JTlZBTElEQSA9ICdPUEVSQUNBT19JTlZBTElEQSc7XG5cbmV4cG9ydCBjb25zdCBjYWxjdWxhZG9yYSA9IChvcGVyYWNhbywgdmFsb3JlcykgPT4ge1xuICBpZiAoIUFycmF5LmlzQXJyYXkodmFsb3JlcykgfHwgdmFsb3Jlcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gT1BFUkFDQU9fSU5WQUxJREE7XG4gIH1cblxuICBzd2l0Y2ggKG9wZXJhY2FvKSB7XG4gICAgY2FzZSAnc29tYSc6XG4gICAgICByZXR1cm4gdmFsb3Jlcy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiLCAwKTtcbiAgICBjYXNlICdzdWJ0cmFjYW8nOlxuICAgICAgcmV0dXJuIHZhbG9yZXMucmVkdWNlKChhLCBiKSA9PiBhIC0gYik7XG4gICAgY2FzZSAnbXVsdGlwbGljYWNhbyc6XG4gICAgICByZXR1cm4gdmFsb3Jlcy5yZWR1Y2UoKGEsIGIpID0+IGEgKiBiLCAxKTtcbiAgICBjYXNlICdkaXZpc2FvJzpcbiAgICAgIHJldHVybiB2YWxvcmVzLnJlZHVjZSgoYSwgYikgPT4gYSAvIGIpO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gT1BFUkFDQU9fSU5WQUxJREE7XG4gIH1cbn07XG5cbmNvbnN0IHJsID0gcmVhZGxpbmUuY3JlYXRlSW50ZXJmYWNlKHtcbiAgaW5wdXQ6IHByb2Nlc3Muc3RkaW4sXG4gIG91dHB1dDogcHJvY2Vzcy5zdGRvdXQsXG59KTtcblxuY29uc3QgZXhpYmlyTWVudSA9ICgpID0+IHtcbiAgY29uc29sZS5sb2coYFxceDFiWzM0bVxceDFiWzFtXFxuRXNjb2xoYSB1bWEgb3BlcmHDp8OjbzpcXHgxYlswbWApO1xuICBjb25zb2xlLmxvZyhgXFx4MWJbMzJtMSAtIFNvbWFcXHgxYlswbWApO1xuICBjb25zb2xlLmxvZyhgXFx4MWJbMzJtMiAtIFN1YnRyYcOnw6NvXFx4MWJbMG1gKTtcbiAgY29uc29sZS5sb2coYFxceDFiWzMybTMgLSBNdWx0aXBsaWNhw6fDo29cXHgxYlswbWApO1xuICBjb25zb2xlLmxvZyhgXFx4MWJbMzJtNCAtIERpdmlzw6NvXFx4MWJbMG1gKTtcbiAgY29uc29sZS5sb2coYFxceDFiWzMxbVggLSBTYWlyXFx4MWJbMG1gKTtcbn07XG5cbmNvbnN0IHByb2Nlc3Nhck9wZXJhY2FvID0gKCkgPT4ge1xuICBleGliaXJNZW51KCk7XG4gIHJsLnF1ZXN0aW9uKCdEaWdpdGUgbyBuw7ptZXJvIGNvcnJlc3BvbmRlbnRlIMOgIG9wZXJhw6fDo28gZGVzZWphZGEgb3UgXCJ4XCIgcGFyYSBzYWlyOiAnLCAob3BjYW8pID0+IHtcbiAgICBpZiAob3BjYW8udG9Mb3dlckNhc2UoKSA9PT0gJ3gnKSB7XG4gICAgICBjb25zb2xlLmxvZygnRW5jZXJyYW5kbyBhIGNhbGN1bGFkb3JhLiBBdMOpIGEgcHLDs3hpbWEhJyk7XG4gICAgICBybC5jbG9zZSgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IG9wZXJhY29lcyA9IHtcbiAgICAgIDE6ICdzb21hJyxcbiAgICAgIDI6ICdzdWJ0cmFjYW8nLFxuICAgICAgMzogJ211bHRpcGxpY2FjYW8nLFxuICAgICAgNDogJ2RpdmlzYW8nLFxuICAgIH07XG5cbiAgICBjb25zdCBvcGVyYWNhbyA9IG9wZXJhY29lc1tvcGNhb107XG5cbiAgICBpZiAoIW9wZXJhY2FvKSB7XG4gICAgICBjb25zb2xlLmxvZygnT3DDp8OjbyBpbnbDoWxpZGEuIFRlbnRlIG5vdmFtZW50ZS4nKTtcbiAgICAgIHByb2Nlc3Nhck9wZXJhY2FvKCk7IFxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHJsLnF1ZXN0aW9uKCdEaWdpdGUgb3MgbsO6bWVyb3Mgc2VwYXJhZG9zIHBvciBlc3Bhw6dvOiAnLCAoZW50cmFkYU51bWVyb3MpID0+IHtcbiAgICAgIGNvbnN0IG51bWVyb3MgPSBlbnRyYWRhTnVtZXJvcy5zcGxpdCgnICcpLm1hcChOdW1iZXIpOyBcbiAgICAgIGNvbnN0IHJlc3VsdGFkbyA9IGNhbGN1bGFkb3JhKG9wZXJhY2FvLCBudW1lcm9zKTtcblxuICAgICAgaWYgKHJlc3VsdGFkbyA9PT0gT1BFUkFDQU9fSU5WQUxJREEpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1ZhbG9yZXMgZm9ybmVjaWRvcyBuw6NvIHPDo28gdsOhbGlkb3MuJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmxvZyhgXFxuXFx4MWJbNDFtXFx4MWJbMW0gTyByZXN1bHRhZG8gZGEgJHtvcGVyYWNhb30gw6k6ICR7cmVzdWx0YWRvfSBcXHgxYlswbWApO1xuICAgICAgfVxuXG4gICAgICBwcm9jZXNzYXJPcGVyYWNhbygpO1xuICAg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",
    "map": {
      "version": 3,
      "names": [
        "_readline",
        "_interopRequireDefault",
        "require",
        "e",
        "__esModule",
        "OPERACAO_INVALIDA",
        "exports",
        "calculadora",
        "operacao",
        "valores",
        "Array",
        "isArray",
        "length",
        "reduce",
        "a",
        "b",
        "rl",
        "readline",
        "createInterface",
        "input",
        "process",
        "stdin",
        "output",
        "stdout",
        "exibirMenu",
        "console",
        "log",
        "processarOperacao",
        "question",
        "opcao",
        "toLowerCase",
        "close",
        "operacoes",
        "entradaNumeros",
        "numeros",
        "split",
        "map",
        "Number",
        "resultado",
        "concat"
      ],
      "sourceRoot": "/media/igor/cc50464b-7dd7-4441-b971-583f5f5884c6/igor 2/Ecrescer/JavaScript/calculadora-js/src/",
      "sources": [
        "calculadora.js"
      ],
      "sourcesContent": [
        "// export const OPERACAO_INVALIDA = 'OPERACAO_INVALIDA'\n\n// export const calculadora = (operacao, valores) => {\n//   // código mais simples com a função reduce mas que ainda não foi visto em aula\n//   if (!Array.isArray(valores) || valores.length === 0) {\n//     return OPERACAO_INVALIDA;\n//   }\n\n//   switch (operacao) {\n//     case 'soma':\n//       return valores.reduce((a, b) => a + b, 0);\n//     case 'subtracao':\n//       return valores.reduce((a, b) => a - b);\n//     case 'multiplicacao':\n//       return valores.reduce((a, b) => a * b, 1);\n//     case 'divisao':\n//       return valores.reduce((a, b) => a / b);\n//     default:\n//       return OPERACAO_INVALIDA;\n//   }\n\n  \n\n\n//   // codigo com oque foi visto em aula\n//   // if (!Array.isArray(valores) || valores.length === 0) {\n//   //   return OPERACAO_INVALIDA;\n//   // }\n\n//   // let resultado = valores[0];\n\n//   // switch (operacao) {\n//   //   case 'soma':\n//   //     for (let i = 1; i < valores.length; i++) {\n//   //       resultado += valores[i];\n//   //     }\n//   //     return resultado;\n//   //   case 'subtracao':\n//   //     for (let i = 1; i < valores.length; i++) {\n//   //       resultado -= valores[i];\n//   //     }\n//   //     return resultado;\n//   //   case 'multiplicacao':\n//   //     for (let i = 1; i < valores.length; i++) {\n//   //       resultado *= valores[i];\n//   //     }\n//   //     return resultado;\n//   //   case 'divisao':\n//   //     for (let i = 1; i < valores.length; i++) {\n//   //       resultado /= valores[i];\n//   //     }\n//   //     return resultado;\n//   //   default:\n//   //     return OPERACAO_INVALIDA;\n//   // }\n// }\n\n// console.log(calculadora('multiplicacao', [100, 10]))\n\nimport readline from 'readline';\n\nexport const OPERACAO_INVALIDA = 'OPERACAO_INVALIDA';\n\nexport const calculadora = (operacao, valores) => {\n  if (!Array.isArray(valores) || valores.length === 0) {\n    return OPERACAO_INVALIDA;\n  }\n\n  switch (operacao) {\n    case 'soma':\n      return valores.reduce((a, b) => a + b, 0);\n    case 'subtracao':\n      return valores.reduce((a, b) => a - b);\n    case 'multiplicacao':\n      return valores.reduce((a, b) => a * b, 1);\n    case 'divisao':\n      return valores.reduce((a, b) => a / b);\n    default:\n      return OPERACAO_INVALIDA;\n  }\n};\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\n\nconst exibirMenu = () => {\n  console.log(`\\x1b[34m\\x1b[1m\\nEscolha uma operação:\\x1b[0m`);\n  console.log(`\\x1b[32m1 - Soma\\x1b[0m`);\n  console.log(`\\x1b[32m2 - Subtração\\x1b[0m`);\n  console.log(`\\x1b[32m3 - Multiplicação\\x1b[0m`);\n  console.log(`\\x1b[32m4 - Divisão\\x1b[0m`);\n  console.log(`\\x1b[31mX - Sair\\x1b[0m`);\n};\n\nconst processarOperacao = () => {\n  exibirMenu();\n  rl.question('Digite o número correspondente à operação desejada ou \"x\" para sair: ', (opcao) => {\n    if (opcao.toLowerCase() === 'x') {\n      console.log('Encerrando a calculadora. Até a próxima!');\n      rl.close();\n      return;\n    }\n\n    const operacoes = {\n      1: 'soma',\n      2: 'subtracao',\n      3: 'multiplicacao',\n      4: 'divisao',\n    };\n\n    const operacao = operacoes[opcao];\n\n    if (!operacao) {\n      console.log('Opção inválida. Tente novamente.');\n      processarOperacao(); \n      return;\n    }\n\n    rl.question('Digite os números separados por espaço: ', (entradaNumeros) => {\n      const numeros = entradaNumeros.split(' ').map(Number); \n      const resultado = calculadora(operacao, numeros);\n\n      if (resultado === OPERACAO_INVALIDA) {\n        console.log('Valores fornecidos não são válidos.');\n      } else {\n        console.log(`\\n\\x1b[41m\\x1b[1m O resultado da ${operacao} é: ${resultado} \\x1b[0m`);\n      }\n\n      processarOperacao();\n    });\n  });\n};\n\n\nprocessarOperacao();\n"
      ],
      "mappings": "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",
      "ignoreList": []
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1732332653453
  }
}